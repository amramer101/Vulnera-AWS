# اسم الـ Workflow الذي سيظهر في صفحة Actions في GitHub
name: Deploy Frontend to Azure Storage

# هذا الجزء يحدد متى يتم تشغيل الـ Workflow
on:
  # يتم التشغيل عند أي عملية push على فرع main
  push:
    branches:
      - main

# المهام التي سيتم تنفيذها
jobs:
  build-and-deploy:
    # نوع النظام الذي ستعمل عليه المهمة (أحدث نسخة من أوبونتو)
    runs-on: ubuntu-latest

    # الخطوات التي سيتم تنفيذها بالترتيب
    steps:
      # 1. سحب الكود من المستودع (repository) لكي يتمكن الـ runner من الوصول إليه
      - name: Checkout repo
        uses: actions/checkout@v3

      # 2. إعداد بيئة عمل Node.js بالإصدار 18
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      # 3. تثبيت الاعتماديات (dependencies) الخاصة بالمشروع من ملف package.json
      - name: Install dependencies
        # تحديد المجلد الذي يحتوي على الواجهة الأمامية
        working-directory: ./frontend
        run: npm install

      # 4. بناء المشروع وتحويله إلى ملفات static جاهزة للنشر
      - name: Build project
        working-directory: ./frontend
        run: npm run build
# The name of the Workflow as it will appear in the Actions page on GitHub
name: Deploy Frontend to Azure Storage

# This section specifies when the Workflow will be triggered
on:
  # Trigger on any push to the main branch
  push:
    branches:
      - main

# The jobs to be executed
jobs:
  build-and-deploy:
    # The operating system for the job (latest Ubuntu version)
    runs-on: ubuntu-latest

    # The steps to be executed in order
    steps:
      # 1. Checkout the code from the repository so the runner can access it
      - name: Checkout repo
        uses: actions/checkout@v3

      # 2. Set up Node.js environment with version 18
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      # 3. Install project dependencies from package.json
      - name: Install dependencies
        # Specify the folder containing the frontend
        working-directory: ./frontend
        run: npm install

      # 4. Build the project and generate static files ready for deployment
      - name: Build project
        working-directory: ./frontend
        run: npm run build
        # Inject the correct production environment variables during the build process
        env:
          VITE_API_BASE_URL: https://vulnera-back.politeisland-d68133bc.switzerlandnorth.azurecontainerapps.io
          VITE_API_VERSION: v1
          VITE_API_TIMEOUT: 45000
          VITE_APP_NAME: Vulnera
          VITE_APP_VERSION: 1.0.0
          VITE_ENVIRONMENT: production
          VITE_ENABLE_DEBUG: false

      # 5. رفع الملفات الناتجة من عملية البناء إلى Azure Storage Account
      - name: Upload to Azure Storage
        uses: azure/CLI@v1
        with:
          inlineScript: |
            az storage blob upload-batch \
              --account-name vulnerastorageaccount \
              --auth-mode key \
              -s ./frontend/dist \
              -d '$web' \
              --overwrite true
        env:
          # هذا المتغير السري يجب أن يكون مُعرفًا في إعدادات GitHub Secrets
          AZURE_STORAGE_KEY: ${{ secrets.AZURE_STORAGE_KEY }}
