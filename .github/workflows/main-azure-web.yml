name: Build & Push Vulnera to ACR

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

env:
  IMAGE_NAME: vulnera-app
  DOCKERFILE_PATH: scripts/docker/Dockerfile

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Cache cargo registry/git/target
      - name: Cache cargo registry
        uses: actions/cache@v4
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-registry-

      - name: Cache cargo git
        uses: actions/cache@v4
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-git-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-git-

      - name: Cache cargo build (target)
        uses: actions/cache@v4
        with:
          path: target
          key: ${{ runner.os }}-cargo-build-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-cargo-build-

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Build Rust project (release)
        run: cargo build --release

      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Login to ACR (using az)
        run: az acr login --name ${{ secrets.ACR_NAME }}

      - name: Build Docker image
        run: |
          ACR_LOGIN_SERVER="${{ secrets.ACR_LOGIN_SERVER }}"
          IMAGE_TAG_SHA="${ACR_LOGIN_SERVER}/${{ env.IMAGE_NAME }}:${{ github.sha }}"
          IMAGE_TAG_LATEST="${ACR_LOGIN_SERVER}/${{ env.IMAGE_NAME }}:latest"
          
          docker build -f ${{ env.DOCKERFILE_PATH }} -t "${IMAGE_TAG_SHA}" -t "${IMAGE_TAG_LATEST}" .

      - name: Push Docker image to ACR
        run: |
          ACR_LOGIN_SERVER="${{ secrets.ACR_LOGIN_SERVER }}"
          IMAGE_TAG_SHA="${ACR_LOGIN_SERVER}/${{ env.IMAGE_NAME }}:${{ github.sha }}"
          IMAGE_TAG_LATEST="${ACR_LOGIN_SERVER}/${{ env.IMAGE_NAME }}:latest"
          
          docker push "${IMAGE_TAG_SHA}"
          docker push "${IMAGE_TAG_LATEST}"
          
          echo "Successfully pushed image to ACR: ${IMAGE_TAG_SHA}"
